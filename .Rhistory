1:32[-1]
1:32[1:10]
1:32
c(1:11, 13:22, 24:28)
c(1:11, 13:22, 24:27, 29:32)
load("STM_K32.RData")
graph_esteff <- function(topic_number, model_name) {
est_eff <- estimateEffect(c(topic_number) ~ organization + date, model_name, metadata = ant_stm$meta, uncertainty = "Global")
graph_title <- paste("Specification A: Effect of Organization Covariate on Topic ", topic_number, "'s Proportion of Documents with 95 Pct CI", sep = "")
plot(est_eff, "organization", model = model_name, main = graph_title)
}
graph_esteff(12, selected_32_org)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/lesliehuang/Dropbox/Antarctica topic models/")
load("STM_K32.RData")
set.seed(1234)
libraries <- c("foreign", "utils", "dplyr", "devtools", "quanteda", "ggplot2", "topicmodels", "stm", "lda", "LDAvis", "jsonlite", "stringi", "stmBrowser")
lapply(libraries, require, character.only=TRUE)
topics_for_corr = c(1:11, 13:22, 24:27, 29:32)
graph_esteff <- function(topic_number, model_name) {
est_eff <- estimateEffect(c(topic_number) ~ organization + date, model_name, metadata = ant_stm$meta, uncertainty = "Global")
graph_title <- paste("Specification A: Effect of Organization Covariate on Topic ", topic_number, "'s Proportion of Documents with 95 Pct CI", sep = "")
plot(est_eff, "organization", model = model_name, main = graph_title)
}
graph_esteff(12, selected_32_org)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/lesliehuang/Dropbox/Antarctica topic models/")
load("STM_K32.RData")
set.seed(1234)
libraries <- c("foreign", "utils", "dplyr", "devtools", "quanteda", "ggplot2", "topicmodels", "stm", "lda", "LDAvis", "jsonlite", "stringi", "stmBrowser")
lapply(libraries, require, character.only=TRUE)
plot(selected_32_org, type = "perspectives", topics = c(1), n = 50, covarlevels = c(4, 11), main = "Topic 1: SCAR and ASOC Word Usage", text.cex = 3)
plot(selected_32_org, type = "perspectives", topics = c(1), n = 50, covarlevels = c(4, 9), main = "Topic 1: ASOC and IAATO Word Usage", text.cex = 3)
plot(selected_32_org, type = "perspectives", topics = c(1), n = 50, covarlevels = c(11, 9), main = "Topic 1: SCAR and IAATO Word Usage", text.cex = 3)
est_eff <- estimateEffect(1:32 ~ organization + date, selected_32_year, metadata = ant_stm$meta, uncertainty = "Local", documents = ant_stm$documents)
eigen(sigma)
eigem(selected_32_org$sigma)
eigen(selected_32_org$sigma)
load("STM_K32.RData")
setwd("/Users/lesliehuang/Dropbox/Antarctica topic models/")
load("STM_K32.RData")
set.seed(1234)
libraries <- c("foreign", "utils", "dplyr", "devtools", "quanteda", "ggplot2", "topicmodels", "stm", "lda", "LDAvis", "jsonlite", "stringi", "stmBrowser")
lapply(libraries, require, character.only=TRUE)
topics_for_corr = c(1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 18, 20, 21, 25, 30, 31, 32)
topic_names <- c("Penguins", "Conservation of fish, birds, marine mammals", "CCAMLR reporting", "Geological surveying", "ATS Scientific Committee", "Climate in S. Ocean", "Protected areas", "Krill", "Whale stocks", "Tourism", "Environment protocol", "Data collection", "Marine search and rescure", "Marine mammals", "Station environmental impact", "Marine protected areas", "Boat tourism", "Temperature monitoring", "ATCM rulemaking")
for (i in topics_for_corr) {
est_eff <- estimateEffect(c(n) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
means <- plotted_est$means
print(means)
}
x <- 2
print(x)
for (i in topics_for_corr) {
est_eff <- estimateEffect(c(i) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
means <- plotted_est$means
print(means)
}
point_estimates <- (data = NA, nrow = 19, ncol = 11)
point_estimates <- matrix(data = NA, nrow = 19, ncol = 11)
point_estimates[,1]
point_estimates[1,]
est_eff <- estimateEffect(c(1) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
point_estimates[1, ] <- unlist(plotted_est$means)
point_estimates
plotted_est$cis
plotted_est$cis[1]
plotted_est$cis[[1]]
plotted_est$cis[1,1]
View(plotted_est$cis)
point_estimates[1,]
point_estimates[1,] + "*"
apply(point_estimates[1,], "*", paste, sep="")
class(point_estimates)
class(point_estimates[1,])
as.character(point_estimates[1,])
apply(point_estimates[1,], "*", paste, sep="")
point_estimates[1,1] <- paste(point_estimates[1,1], "*", sep = "")
point_estimates[1,]
plotted_est$cis
plotted_est$cis[1,1]
class(plotted_est$cis[1,1])
class(plotted_est$cis)
x <- unlist(plotted_est$cis)
x
x <- as.matrix(plotted_est$cis)
x
x <- as.matrix(unlist(plotted_est$cis))
x
plotted_est$cis
unlist(plotted_est$cis)
x <- as.matrix(unlist(plotted_est$cis), ncol = 11, byrow = TRUE)
x
x <- as.matrix(unlist(plotted_est$cis), ncol = 11)
x
array(unlist(plotted_est$cis), dim = c(11, 2))
array(unlist(plotted_est$cis), dim = c(2, 11))
x<0array(unlist(plotted_est$cis), dim = c(2, 11))
x<-array(unlist(plotted_est$cis), dim = c(2, 11))
x[1]
x[1,1]
x[1,2]
x[2,1]
point_estimates <- matrix(data = NA, nrow = 19, ncol = 11)
for (i in topics_for_corr) {
est_eff <- estimateEffect(c(i) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
means <- plotted_est$means
point_estimates[i, ] <- unlist(means)
point_estimates[i, ] <- as.character(point_estimates[i, ])
# now add asterisks if the confidence intervals do NOT pass through zero
ci_bounds <- array(unlist(plotted_est$cis), dim = c(2, 11))
for (j in 1:11) {
if (ci_bounds[1, j] > 0 & ci_bounds[2, j] > 0) {
point_estimates[i, j] <- paste(point_estimates[i, j], "*", sep = "")
}
}
}
x
x[1,]
x[1,1]
x[2,1]
x[2,11]
x[1,11]
point_estimates[1,1]
point_estimates[1,]
point_estimates[2,]
point_estimates
View(point_estimates)
for (i in topics_for_corr) {
est_eff <- estimateEffect(c(i) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
means <- plotted_est$means
point_estimates[i, ] <- unlist(means)
point_estimates[i, ] <- as.character(point_estimates[i, ])
# # now add asterisks if the confidence intervals do NOT pass through zero
# ci_bounds <- array(unlist(plotted_est$cis), dim = c(2, 11))
#
# for (j in 1:11) {
#   if (ci_bounds[1, j] > 0 & ci_bounds[2, j] > 0) {
#     point_estimates[i, j] <- paste(point_estimates[i, j], "*", sep = "")
#   }
# }
}
point_estimates
View(point_estimates)
est_eff <- estimateEffect(c(6) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
means <- plotted_est$means
means
point_estimates[6, ] <- unlist(means)
View(point_estimates)
View(point_estimates)
na.omit(point_estimates)
point_estimates
point_estimates <- na.omit(point_estimates)
View(point_estimates)
plotted_est$labels
point_estimates <- matrix(data = NA, nrow = 32, ncol = 11)
labels <- matrix(data = NA, nrow = 32, ncol = 11)
for (i in topics_for_corr) {
est_eff <- estimateEffect(c(i) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
point_estimates[i, ] <- unlist(plotted_est$means)
point_estimates[i, ] <- as.character(point_estimates[i, ])
labels[i, ] <- unlist(plotted_est$labels)
# now add asterisks if the confidence intervals do NOT pass through zero
ci_bounds <- array(unlist(plotted_est$cis), dim = c(2, 11))
for (j in 1:11) {
if (ci_bounds[1, j] > 0 & ci_bounds[2, j] > 0) {
point_estimates[i, j] <- paste(point_estimates[i, j], "*", sep = "")
}
}
}
# Now remove the rows (topics) that we didn't want
point_estimates <- na.omit(point_estimates)
# Label the rows and the columns
point_est_df <- data.frame(point_estimates, row.names = topic_names)
point_estimates
View(point_estimates)
point_est_df <- data.frame(point_estimates, row.names = topic_names)
point_est_df
View(point_est_df)
View(labels)
topic_labels <- c("AARI", "ACECRC", "ARC", "ASOC", "ATS", "CCAMLR", "CCAS", "COMNAP", "IAATO", "IMAS", "SCAR")
colnames(point_est_df) <- topic_labels
View(point_est_df)
point_estimates <- matrix(data = NA, nrow = 32, ncol = 11)
labels <- matrix(data = NA, nrow = 32, ncol = 11)
for (i in topics_for_corr) {
est_eff <- estimateEffect(c(i) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
point_estimates[i, ] <- unlist(round(plotted_est$means), 5)
point_estimates[i, ] <- as.character(point_estimates[i, ])
labels[i, ] <- unlist(plotted_est$labels)
# now add asterisks if the confidence intervals do NOT pass through zero
ci_bounds <- array(unlist(plotted_est$cis), dim = c(2, 11))
for (j in 1:11) {
if (ci_bounds[1, j] > 0 & ci_bounds[2, j] > 0) {
point_estimates[i, j] <- paste(point_estimates[i, j], "*", sep = "")
}
}
}
point_estimates <- matrix(data = NA, nrow = 32, ncol = 11)
labels <- matrix(data = NA, nrow = 32, ncol = 11)
for (i in topics_for_corr) {
est_eff <- estimateEffect(c(i) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
point_estimates[i, ] <- round(unlist((plotted_est$means)), 6)
point_estimates[i, ] <- as.character(point_estimates[i, ])
labels[i, ] <- unlist(plotted_est$labels)
# now add asterisks if the confidence intervals do NOT pass through zero
ci_bounds <- array(unlist(plotted_est$cis), dim = c(2, 11))
for (j in 1:11) {
if (ci_bounds[1, j] > 0 & ci_bounds[2, j] > 0) {
point_estimates[i, j] <- paste(point_estimates[i, j], "*", sep = "")
}
}
}
View(point_estimates)
View(point_estimates)
point_estimates <- na.omit(point_estimates)
point_est_df <- data.frame(point_estimates, row.names = topic_names)
View(labels)
topic_labels <- c("AARI", "ACECRC", "ARC", "ASOC", "ATS", "CCAMLR", "CCAS", "COMNAP", "IAATO", "IMAS", "SCAR")
colnames(point_est_df) <- topic_labels
View(point_estimates)
View(point_estimates)
View(point_est_df)
View(point_est_df)
write.table(point_est_df, file = "point_estimates.csv")
write.csv(point_est_df, file = "point_estimates.csv")
dummy_matrix <- gsub(patter = "*", replacement = "1", point_est_df)
View(dummy_matrix)
dummy_matrix
dummy_matrix <- gsub(pattern = "*", replacement = "1", point_est_df)
dummy_matrix
grepl("*", point_est_df)
point_est_df
x <- grepl("*", point_est_df)
x
View(x)
library(stringr)
x <- grepl("*", point_est_df)
x
View(point_est_df)
View(point_est_df)
x <- grepl("\*", point_est_df)
x <- grepl("*\", point_est_df)
x <- grepl("\\*", point_est_df)
x <- grepl("\\*", point_est_df)
x
dummy_matrix <- matrix(data = NA, nrow = 19, ncol = 11)
for (i in 1:11) {
dummy_matrix[i, ] <- grepl("\\*", point_est_df[i, ])
}
dummy_matrix
point_est_df[1,]
dummy_matrix
dummy_matrix <- matrix(data = NA, nrow = 19, ncol = 11)
for (i in 1:11) {
dummy_matrix[i, ] <- grepl("\\*$", point_est_df[i, ])
}
dummy_matri
dummy_matrix
point_est_df
grepl("\\*$", point_est_df[i, ])
grepl("0$", point_est_df[i, ])
grepl("3", point_est_df[i, ])
grepl("$\\*", point_est_df[i, ])
grepl("$\*", point_est_df[i, ])
grepl("\*", point_est_df[i, ])
grepl("\\*", point_est_df[i, ])
grepl("\\*", point_est_df[1, ])
grepl("\\*$", point_est_df[1, ])
grepl("$\\*", point_est_df[1, ])
point_estimates <- matrix(data = NA, nrow = 32, ncol = 11)
dummy_matrix <- matrix(data = 0, nrow = 19, ncol = 11)
labels <- matrix(data = NA, nrow = 32, ncol = 11)
for (i in topics_for_corr) {
n <- 1
est_eff <- estimateEffect(c(i) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
point_estimates[i, ] <- round(unlist((plotted_est$means)), 6)
point_estimates[i, ] <- as.character(point_estimates[i, ])
labels[i, ] <- unlist(plotted_est$labels)
# now add asterisks if the confidence intervals do NOT pass through zero
ci_bounds <- array(unlist(plotted_est$cis), dim = c(2, 11))
for (j in 1:11) {
if (ci_bounds[1, j] > 0 & ci_bounds[2, j] > 0) {
point_estimates[i, j] <- paste(point_estimates[i, j], "*", sep = "")
dummy_matrix(n, j) <- "*"
}
}
n <- n + 1
}
dummy_matrix <- matrix(data = 0, nrow = 19, ncol = 11)
dummy_matrix
point_estimates <- matrix(data = NA, nrow = 32, ncol = 11)
dummy_matrix <- matrix(data = 0, nrow = 19, ncol = 11)
labels <- matrix(data = NA, nrow = 32, ncol = 11)
for (i in topics_for_corr) {
n <- 1
est_eff <- estimateEffect(c(i) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
point_estimates[i, ] <- round(unlist((plotted_est$means)), 6)
point_estimates[i, ] <- as.character(point_estimates[i, ])
labels[i, ] <- unlist(plotted_est$labels)
# now add asterisks if the confidence intervals do NOT pass through zero
ci_bounds <- array(unlist(plotted_est$cis), dim = c(2, 11))
for (j in 1:11) {
if (ci_bounds[1, j] > 0 & ci_bounds[2, j] > 0) {
point_estimates[i, j] <- paste(point_estimates[i, j], "*", sep = "")
dummy_matrix[n, j] <- "*"
}
}
n <- n + 1
}
View(dummy_matrix)
View(dummy_matrix)
View(point_est_df)
View(point_est_df)
point_estimates <- matrix(data = NA, nrow = 32, ncol = 11)
dummy_matrix <- matrix(data = 0, nrow = 32, ncol = 11)
labels <- matrix(data = NA, nrow = 32, ncol = 11)
for (i in topics_for_corr) {
est_eff <- estimateEffect(c(i) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
point_estimates[i, ] <- round(unlist((plotted_est$means)), 6)
point_estimates[i, ] <- as.character(point_estimates[i, ])
labels[i, ] <- unlist(plotted_est$labels)
# now add asterisks if the confidence intervals do NOT pass through zero
ci_bounds <- array(unlist(plotted_est$cis), dim = c(2, 11))
for (j in 1:11) {
if (ci_bounds[1, j] > 0 & ci_bounds[2, j] > 0) {
point_estimates[i, j] <- paste(point_estimates[i, j], "*", sep = "")
dummy_matrix[i, j] <- "1"
}
}
}
# Now remove the rows (topics) that we didn't want
point_estimates <- na.omit(point_estimates)
# Label the rows and the columns
point_est_df <- data.frame(point_estimates, row.names = topic_names)
# just check that all of the covars are in the same order for each topic
View(labels)
topic_labels <- c("AARI", "ACECRC", "ARC", "ASOC", "ATS", "CCAMLR", "CCAS", "COMNAP", "IAATO", "IMAS", "SCAR")
colnames(point_est_df) <- topic_labels
write.csv(point_est_df, file = "point_estimates.csv")
# and remove the rows we don't want from the dichotomized version
dummy_matrix <- dummy_matrix[topics_for_corr]
write.csv(dummy_matrix, file = "dichotomized_version.csv")
dummy_matrix
point_estimates <- matrix(data = NA, nrow = 32, ncol = 11)
dummy_matrix <- matrix(data = 0, nrow = 32, ncol = 11)
labels <- matrix(data = NA, nrow = 32, ncol = 11)
for (i in topics_for_corr) {
est_eff <- estimateEffect(c(i) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
point_estimates[i, ] <- round(unlist((plotted_est$means)), 6)
point_estimates[i, ] <- as.character(point_estimates[i, ])
labels[i, ] <- unlist(plotted_est$labels)
# now add asterisks if the confidence intervals do NOT pass through zero
ci_bounds <- array(unlist(plotted_est$cis), dim = c(2, 11))
for (j in 1:11) {
if (ci_bounds[1, j] > 0 & ci_bounds[2, j] > 0) {
point_estimates[i, j] <- paste(point_estimates[i, j], "*", sep = "")
dummy_matrix[i, j] <- 1
}
}
}
View(dummy_matrix)
View(dummy_matrix)
# Now remove the rows (topics) that we didn't want
point_estimates <- na.omit(point_estimates)
# Label the rows and the columns
point_est_df <- data.frame(point_estimates, row.names = topic_names)
# just check that all of the covars are in the same order for each topic
View(labels)
topic_labels <- c("AARI", "ACECRC", "ARC", "ASOC", "ATS", "CCAMLR", "CCAS", "COMNAP", "IAATO", "IMAS", "SCAR")
colnames(point_est_df) <- topic_labels
write.csv(point_est_df, file = "point_estimates.csv")
# and remove the rows we don't want from the dichotomized version
dummy_matrix <- dummy_matrix[topics_for_corr]
dummy_matrix <- data.frame(dummy_matrix, row.names = topic_names)
colnames(dummy_matrix) <- topic_labels
write.csv(dummy_matrix, file = "dichotomized_version.csv")
dummy_matrix
point_estimates <- matrix(data = NA, nrow = 32, ncol = 11)
dummy_matrix <- matrix(data = 0, nrow = 32, ncol = 11)
labels <- matrix(data = NA, nrow = 32, ncol = 11)
for (i in topics_for_corr) {
est_eff <- estimateEffect(c(i) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
point_estimates[i, ] <- round(unlist((plotted_est$means)), 6)
point_estimates[i, ] <- as.character(point_estimates[i, ])
labels[i, ] <- unlist(plotted_est$labels)
# now add asterisks if the confidence intervals do NOT pass through zero
ci_bounds <- array(unlist(plotted_est$cis), dim = c(2, 11))
for (j in 1:11) {
if (ci_bounds[1, j] > 0 & ci_bounds[2, j] > 0) {
point_estimates[i, j] <- paste(point_estimates[i, j], "*", sep = "")
dummy_matrix[i, j] <- 1
}
}
}
est_eff <- estimateEffect(c(18) ~ organization + date, selected_32_org, metadata = ant_stm$meta, uncertainty = "Global")
plotted_est <- plot(est_eff, "organization", model = selected_32_org, main = graph_title, ci.level = 0.9)
plotted_est$cis
plotted_est$means
# Now remove the rows (topics) that we didn't want
point_estimates <- na.omit(point_estimates)
# Label the rows and the columns
point_est_df <- data.frame(point_estimates, row.names = topic_names)
# just check that all of the covars are in the same order for each topic
View(labels)
topic_labels <- c("AARI", "ACECRC", "ARC", "ASOC", "ATS", "CCAMLR", "CCAS", "COMNAP", "IAATO", "IMAS", "SCAR")
colnames(point_est_df) <- topic_labels
write.csv(point_est_df, file = "point_estimates2.csv")
write.csv(point_est_df, file = "point_estimates2.csv")
dummy_df <- dummy_matrix[topics_for_corr]
dummy_df
dummy_df <- dummy_matrix[topics_for_corr, ]
View(dummy_df)
View(dummy_matrix)
View(dummy_matrix)
dumy_df
dummy_df
dummy_matrix <- data.frame(dummy_matrix, row.names = topic_names)
colnames(dummy_matrix) <- topic_labels
write.csv(dummy_matrix, file = "dichotomized_version.csv")
dummy_df <- data.frame(dummy_df, row.names = topic_names)
colnames(dummy_df) <- topic_labels
write.csv(dummy_df, file = "dichotomized_version.csv")
libraries <- c("foreign", "utils", "dplyr", "devtools", "quanteda", "ggplot2", "topicmodels", "stm", "lda", "LDAvis", "jsonlite", "stringi", "stmBrowser")
lapply(libraries, require, character.only=TRUE)
warnings()
install.packages("foreign")
install.packages("foreign")
install.packages("quanteda")
install.packages("dplyr")
install.packages("ggplot2")
install.packages(c("stm", "lda"))
install.packages(c("devtools, "jsonlite", "rjson", "LDAvis", topicmodels"))
install.packages(c("devtools", "jsonlite", "rjson", "LDAvis", topicmodels"))
)
quit
)
""
install.packages(c("devtools", "jsonlite", "rjson", "LDAvis", topicmodels"))
install.packages(c("devtools", "jsonlite", "rjson", "LDAvis", "topicmodels"))
""
install.packages(c("devtools", "jsonlite", "rjson", "LDAvis", "topicmodels"))
install.packages(c("stargazer", "stringr", "LIWCalike", "forecast", "lmtest", "strucchange", "vars", "tseries", "urca", "mlogit", "reshape2", "MCDM", "car", "nnet", "stringi", "depmixS4"))
load("~/Dropbox/Shared_with_Leslie/simulations_LH.RData")
install.packages("ldatuning
")
install.packages("ldatuning")
load("un_img.RData")
setwd("/Users/lesliehuang/un-analysis/")
load("un_img.RData")
library("ldatuning")
install.packages("parallel")
install.packages("parallel")
detectCores()
library("parallel")
detectCores()
result <- FindTopicsNumber(
un_dfm,
topics = seq(from = 20, to = 100, by = 10),
metrics = c("Griffiths2004", "CaoJuan2009", "Arun2010", "Deveaud2014"),
method = "Gibbs",
control = list(seed = 1234),
mc.cores = 7L,
verbose = TRUE
)
result <- FindTopicsNumber(
un_dfm,
topics = seq(from = 20, to = 100, by = 20),
metrics = c("Griffiths2004", "CaoJuan2009", "Arun2010", "Deveaud2014"),
method = "Gibbs",
control = list(seed = 1234),
mc.cores = 7L,
verbose = TRUE
)
save.image("un_img.RData")
FindTopicsNumber_plot(result)
result2 <- FindTopicsNumber(
un_dfm,
topics = seq(from = 40, to = 80, by = 5),
metrics = c("Griffiths2004", "CaoJuan2009", "Arun2010", "Deveaud2014"),
method = "Gibbs",
control = list(seed = 1234),
mc.cores = 7L,
verbose = TRUE
)
save.image("un_img.RData")
FindTopicsNumber_plot(result2)
result3 <- FindTopicsNumber(
un_dfm,
topics = seq(from = 50, to = 65, by = 2),
metrics = c("Griffiths2004", "CaoJuan2009", "Arun2010", "Deveaud2014"),
method = "Gibbs",
control = list(seed = 1234),
mc.cores = 7L,
verbose = TRUE
)
FindTopicsNumber_plot(result3)
save.image("un_img.RData")
